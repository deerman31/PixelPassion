services:
  backend-golang:
    image: PixelPassion/backend-golang:${VERSION:-latest}
    build:
      context: ./backend-golang
      dockerfile: Dockerfile
    restart: always
    # 本番環境では開ける必要がない。開発では、直接リクエストを送れたりするので開けといた方が便利。
    ports:
      - "${BACKEND_GOLANG_PORT}:${BACKEND_GOLANG_PORT}"
    env_file: .env
    depends_on:
      - db-mysql
    networks:
      - app-network
    
  frontend-next:
    image: PixelPassion/frontend-next:${VERSION:-latest}
    build:
      context: ./frontend-next
      dockerfile: Dockerfile
    restart: always
    # 本番環境では開ける必要がない。開発では、直接リクエストを送れたりするので開けといた方が便利。
    ports:
      - "${FRONTEND_NEXT_PORT}:${FRONTEND_NEXT_PORT}"
    env_file: .env
    depends_on:
      - backend-golang
    networks:
      - app-network
  
  proxy-nginx:
    image: PixelPassion/proxy-nginx:${VERSION:-latest}
    build:
      context: ./proxy-nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${PROXY_NGINX_PORT}:${PROXY_NGINX_PORT}"
    env_file: .env
    depends_on:
      - frontend-next
      - backend-golang
    networks:
      - app-network
  
  db-mysql:
    image: mysql:latest
    restart: always
    env_file: .env
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - ./db-mysql/mysql-data:/var/lib/mysql
      - ./db-mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
  
volumes:
  mysql-data:

networks:
  app-network:
    name: PixelPassion
    driver: bridge
